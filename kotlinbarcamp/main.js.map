{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"input#message {\\r\\n    background:#fff;\\r\\n    border:none;\\r\\n    outline:none;\\r\\n    box-shadow:none;\\r\\n    font-size:1.6em;\\r\\n    font-weight:300;\\r\\n    margin-bottom: 3em;\\r\\n    padding:1.2em .7em;\\r\\n}\\r\\n\\r\\n#details-container {\\r\\n    display:flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap:wrap;\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n#details-container p {\\r\\n    background:#fff;\\r\\n    padding:1.4em;\\r\\n    color:#696969;\\r\\n    margin: 12px;\\r\\n    width:auto;\\r\\n    min-width:200px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    display:block;\\r\\n    margin-bottom:12px;\\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">Live Kotlin Questions</mat-toolbar>\\n<div class=\\\"row columns container\\\">\\n  <button (click)=\\\"login()\\\" *ngIf=\\\"!(user | async)?.uid\\\">Anonymous Login</button>\\n  <button (click)=\\\"logout()\\\" *ngIf=\\\"(user | async)?.uid\\\">Logout</button>\\n\\n  <input type=\\\"text\\\" id=\\\"question\\\" *ngIf=\\\"(user | async)?.uid\\\" placeholder=\\\"Let's question in?\\\" (keyup.enter)=\\\"Send($event.target.value)\\\" required [(ngModel)]=\\\"msgVal\\\" />\\n  <div id=\\\"details-container\\\">\\n      <p *ngFor=\\\"let item of items | async\\\"><img src=\\\"./src/kotlin.png\\\" width=\\\"30px\\\" height=\\\"30px\\\">{{item.question}}</p>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n// import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n// import { AngularFireAuth } from '@angular/fire/auth';\n\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'kotlinbarcamp';\n  items: Observable<any[]>;\n  user: Observable<firebase.User>;\n  msgVal = '';\n\n  constructor(public afAuth: AngularFireAuth, public af: AngularFireDatabase) {\n    this.items = af.list('/questions').valueChanges();\n\n    this.user = this.afAuth.authState;\n\n  }\n\n  login() {\n    this.afAuth.auth.signInAnonymously();\n  }\n\n  logout() {\n      this.afAuth.auth.signOut();\n  }\n\n  Send(desc: string) {\n      this.af.list('/questions').push({question: desc});\n      this.msgVal = '';\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatToolbarModule, MatButtonModule} from '@angular/material';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n// import { AngularFireModule } from '@angular/fire';\n// import { AngularFirestoreModule } from '@angular/fire/firestore';\n// import { AngularFireStorageModule } from '@angular/fire/storage';\n// import { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { environment } from '../environments/environment';\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    // AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n   // AngularFireStorageModule // imports firebase/storage only needed for storage features\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBnd3uYqiFG5nwLtFZhJAO75Dk3iJnWffw',\n    authDomain: 'kotlinbarcampasean.firebaseapp.com',\n    databaseURL: 'https://kotlinbarcampasean.firebaseio.com',\n    projectId: 'kotlinbarcampasean',\n    storageBucket: 'kotlinbarcampasean.appspot.com',\n    messagingSenderId: '284261131439'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}